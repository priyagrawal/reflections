What happens when you initialize a repository? Why do you need to do it?

- creates a new git repository
- makes all files in that dir as untracked files.
- create my own repository to make use of version control on my files.

How can you use the staging area to make sure you have one commit per logical change?

- git diff tells diff between working dir and staging area
- git diff --staged gives diff between staging area and latest commit.
- git add <file name>  - adds file to the staging area
-git commit - commits changes to the repository


What are some situations when branches would be helpful in keeping your history organized? How would branches help?
- doing experimental changes to code
- adding new feature to your project but still keeping a working copy of the project

How do the diagrams help you visualize the branch structure?
- help undestarnd the where we are in the current branch,
- how diff branches are related and where they differ and where they are simmilar

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
- we get the changes done in bith the branches, thats we see the features added in both branches together in the project.
- two show the two parent branches that have contributed to the current state.